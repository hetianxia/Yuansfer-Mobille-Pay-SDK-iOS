//
//  SVIndefiniteAnimatedView.m
//  SVProgressHUD, https://github.com/SVProgressHUD/SVProgressHUD
//
//  Copyright (c) 2014-2018 Guillaume Campagna. All rights reserved.
//

#import "YSIndefiniteAnimatedView.h"
#import "YSProgressHUD.h"

static NSString * const kAngleMask_1 = @"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";
static NSString * const kAngleMask_2 = @"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";
static NSString * const kAngleMask_3 = @"";

@interface YSIndefiniteAnimatedView ()

@property (nonatomic, strong) CAShapeLayer *indefiniteAnimatedLayer;

@end

@implementation YSIndefiniteAnimatedView

- (void)willMoveToSuperview:(UIView*)newSuperview {
    if (newSuperview) {
        [self layoutAnimatedLayer];
    } else {
        [_indefiniteAnimatedLayer removeFromSuperlayer];
        _indefiniteAnimatedLayer = nil;
    }
}

- (void)layoutAnimatedLayer {
    CALayer *layer = self.indefiniteAnimatedLayer;
    [self.layer addSublayer:layer];
    
    CGFloat widthDiff = CGRectGetWidth(self.bounds) - CGRectGetWidth(layer.bounds);
    CGFloat heightDiff = CGRectGetHeight(self.bounds) - CGRectGetHeight(layer.bounds);
    layer.position = CGPointMake(CGRectGetWidth(self.bounds) - CGRectGetWidth(layer.bounds) / 2 - widthDiff / 2, CGRectGetHeight(self.bounds) - CGRectGetHeight(layer.bounds) / 2 - heightDiff / 2);
}

- (CAShapeLayer*)indefiniteAnimatedLayer {
    if(!_indefiniteAnimatedLayer) {
        CGPoint arcCenter = CGPointMake(self.radius+self.strokeThickness/2+5, self.radius+self.strokeThickness/2+5);
        UIBezierPath* smoothedPath = [UIBezierPath bezierPathWithArcCenter:arcCenter radius:self.radius startAngle:(CGFloat) (M_PI*3/2) endAngle:(CGFloat) (M_PI/2+M_PI*5) clockwise:YES];
        
        _indefiniteAnimatedLayer = [CAShapeLayer layer];
        _indefiniteAnimatedLayer.contentsScale = [[UIScreen mainScreen] scale];
        _indefiniteAnimatedLayer.frame = CGRectMake(0.0f, 0.0f, arcCenter.x*2, arcCenter.y*2);
        _indefiniteAnimatedLayer.fillColor = [UIColor clearColor].CGColor;
        _indefiniteAnimatedLayer.strokeColor = self.strokeColor.CGColor;
        _indefiniteAnimatedLayer.lineWidth = self.strokeThickness;
        _indefiniteAnimatedLayer.lineCap = kCALineCapRound;
        _indefiniteAnimatedLayer.lineJoin = kCALineJoinBevel;
        _indefiniteAnimatedLayer.path = smoothedPath.CGPath;
        
        CALayer *maskLayer = [CALayer layer];
        
        NSString *imageString = kAngleMask_1;
        if ([[NSString stringWithFormat:@"%.f", UIScreen.mainScreen.scale] isEqualToString:@"2"]) {
            imageString = kAngleMask_2;
        } else if ([[NSString stringWithFormat:@"%.f", UIScreen.mainScreen.scale] isEqualToString:@"3"]) {
            imageString = kAngleMask_3;
        }
        NSData *imageData = [[NSData alloc] initWithBase64EncodedString:imageString options:kNilOptions];
        
        maskLayer.contents = (__bridge id)[[[UIImage alloc] initWithData:imageData] CGImage];
        maskLayer.frame = _indefiniteAnimatedLayer.bounds;
        _indefiniteAnimatedLayer.mask = maskLayer;
        
        NSTimeInterval animationDuration = 1;
        CAMediaTimingFunction *linearCurve = [CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionLinear];
        
        CABasicAnimation *animation = [CABasicAnimation animationWithKeyPath:@"transform.rotation"];
        animation.fromValue = (id) 0;
        animation.toValue = @(M_PI*2);
        animation.duration = animationDuration;
        animation.timingFunction = linearCurve;
        animation.removedOnCompletion = NO;
        animation.repeatCount = INFINITY;
        animation.fillMode = kCAFillModeForwards;
        animation.autoreverses = NO;
        [_indefiniteAnimatedLayer.mask addAnimation:animation forKey:@"rotate"];
        
        CAAnimationGroup *animationGroup = [CAAnimationGroup animation];
        animationGroup.duration = animationDuration;
        animationGroup.repeatCount = INFINITY;
        animationGroup.removedOnCompletion = NO;
        animationGroup.timingFunction = linearCurve;
        
        CABasicAnimation *strokeStartAnimation = [CABasicAnimation animationWithKeyPath:@"strokeStart"];
        strokeStartAnimation.fromValue = @0.015;
        strokeStartAnimation.toValue = @0.515;
        
        CABasicAnimation *strokeEndAnimation = [CABasicAnimation animationWithKeyPath:@"strokeEnd"];
        strokeEndAnimation.fromValue = @0.485;
        strokeEndAnimation.toValue = @0.985;
        
        animationGroup.animations = @[strokeStartAnimation, strokeEndAnimation];
        [_indefiniteAnimatedLayer addAnimation:animationGroup forKey:@"progress"];
        
    }
    return _indefiniteAnimatedLayer;
}

- (void)setFrame:(CGRect)frame {
    if(!CGRectEqualToRect(frame, super.frame)) {
        [super setFrame:frame];
        
        if(self.superview) {
            [self layoutAnimatedLayer];
        }
    }
    
}

- (void)setRadius:(CGFloat)radius {
    if(radius != _radius) {
        _radius = radius;
        
        [_indefiniteAnimatedLayer removeFromSuperlayer];
        _indefiniteAnimatedLayer = nil;
        
        if(self.superview) {
            [self layoutAnimatedLayer];
        }
    }
}

- (void)setStrokeColor:(UIColor*)strokeColor {
    _strokeColor = strokeColor;
    _indefiniteAnimatedLayer.strokeColor = strokeColor.CGColor;
}

- (void)setStrokeThickness:(CGFloat)strokeThickness {
    _strokeThickness = strokeThickness;
    _indefiniteAnimatedLayer.lineWidth = _strokeThickness;
}

- (CGSize)sizeThatFits:(CGSize)size {
    return CGSizeMake((self.radius+self.strokeThickness/2+5)*2, (self.radius+self.strokeThickness/2+5)*2);
}

@end
